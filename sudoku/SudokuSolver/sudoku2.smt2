(set-option :produce-assignments true)
(set-logic QF_LIA) ;Using quantifier-free linear integer arithmetic

(declare-fun p0 () Int)
(declare-fun p1 () Int)
(declare-fun p2 () Int)
(declare-fun p3 () Int)
(declare-fun p4 () Int)
(declare-fun p5 () Int)
(declare-fun p6 () Int)
(declare-fun p7 () Int)
(declare-fun p8 () Int)
(declare-fun p9 () Int)
(declare-fun p10 () Int)
(declare-fun p11 () Int)
(declare-fun p12 () Int)
(declare-fun p13 () Int)
(declare-fun p14 () Int)
(declare-fun p15 () Int)
(declare-fun p16 () Int)
(declare-fun p17 () Int)
(declare-fun p18 () Int)
(declare-fun p19 () Int)
(declare-fun p20 () Int)
(declare-fun p21 () Int)
(declare-fun p22 () Int)
(declare-fun p23 () Int)
(declare-fun p24 () Int)
(declare-fun p25 () Int)
(declare-fun p26 () Int)
(declare-fun p27 () Int)
(declare-fun p28 () Int)
(declare-fun p29 () Int)
(declare-fun p30 () Int)
(declare-fun p31 () Int)
(declare-fun p32 () Int)
(declare-fun p33 () Int)
(declare-fun p34 () Int)
(declare-fun p35 () Int)
(declare-fun p36 () Int)
(declare-fun p37 () Int)
(declare-fun p38 () Int)
(declare-fun p39 () Int)
(declare-fun p40 () Int)
(declare-fun p41 () Int)
(declare-fun p42 () Int)
(declare-fun p43 () Int)
(declare-fun p44 () Int)
(declare-fun p45 () Int)
(declare-fun p46 () Int)
(declare-fun p47 () Int)
(declare-fun p48 () Int)
(declare-fun p49 () Int)
(declare-fun p50 () Int)
(declare-fun p51 () Int)
(declare-fun p52 () Int)
(declare-fun p53 () Int)
(declare-fun p54 () Int)
(declare-fun p55 () Int)
(declare-fun p56 () Int)
(declare-fun p57 () Int)
(declare-fun p58 () Int)
(declare-fun p59 () Int)
(declare-fun p60 () Int)
(declare-fun p61 () Int)
(declare-fun p62 () Int)
(declare-fun p63 () Int)
(declare-fun p64 () Int)
(declare-fun p65 () Int)
(declare-fun p66 () Int)
(declare-fun p67 () Int)
(declare-fun p68 () Int)
(declare-fun p69 () Int)
(declare-fun p70 () Int)
(declare-fun p71 () Int)
(declare-fun p72 () Int)
(declare-fun p73 () Int)
(declare-fun p74 () Int)
(declare-fun p75 () Int)
(declare-fun p76 () Int)
(declare-fun p77 () Int)
(declare-fun p78 () Int)
(declare-fun p79 () Int)
(declare-fun p80 () Int)

;every row contains distinct numbers
(assert (distinct p0 p1 p2 p3 p4 p5 p6 p7 p8))
(assert (distinct p9 p10 p11 p12 p13 p14 p15 p16 p17))
(assert (distinct p18 p19 p20 p21 p22 p23 p24 p25 p26))
(assert (distinct p27 p28 p29 p30 p31 p32 p33 p34 p35))
(assert (distinct p36 p37 p38 p39 p40 p41 p42 p43 p44))
(assert (distinct p45 p46 p47 p48 p49 p50 p51 p52 p53))
(assert (distinct p54 p55 p56 p57 p58 p59 p60 p61 p62))
(assert (distinct p63 p64 p65 p66 p67 p68 p69 p70 p71))
(assert (distinct p72 p73 p74 p75 p76 p77 p78 p79 p80))

;every column contains distinct numbers
(assert (distinct p0 p9 p18 p27 p36 p45 p54 p63 p72))
(assert (distinct p1 p10 p19 p28 p37 p46 p55 p64 p73))
(assert (distinct p2 p11 p20 p29 p38 p47 p56 p65 p74))
(assert (distinct p3 p12 p21 p30 p39 p48 p57 p66 p75))
(assert (distinct p4 p13 p22 p31 p40 p49 p58 p67 p76))
(assert (distinct p5 p14 p23 p32 p41 p50 p59 p68 p77))
(assert (distinct p6 p15 p24 p33 p42 p51 p60 p69 p78))
(assert (distinct p7 p16 p25 p34 p43 p52 p61 p70 p79))
(assert (distinct p8 p17 p26 p35 p44 p53 p62 p71 p80))

;every 3x3 box contains distinct numbers
(assert (distinct p0 p1 p2 p9 p10 p11 p18 p19 p20))
(assert (distinct p3 p4 p5 p12 p13 p14 p21 p22 p23))
(assert (distinct p6 p7 p8 p15 p16 p17 p24 p25 p26))
(assert (distinct p27 p28 p29 p36 p37 p38 p45 p46 p47))
(assert (distinct p30 p31 p32 p39 p40 p41 p48 p49 p50))
(assert (distinct p33 p34 p35 p42 p43 p44 p51 p52 p53))
(assert (distinct p54 p55 p56 p63 p64 p65 p72 p73 p74))
(assert (distinct p57 p58 p59 p66 p67 p68 p75 p76 p77))
(assert (distinct p60 p61 p62 p69 p70 p71 p78 p79 p80))

(assert (and (<= p0 9) (>= p0 1)))
(assert (and (<= p1 9) (>= p1 1)))
(assert (and (<= p2 9) (>= p2 1)))
(assert (and (<= p3 9) (>= p3 1)))
(assert (and (<= p4 9) (>= p4 1)))
(assert (and (<= p5 9) (>= p5 1)))
(assert (and (<= p6 9) (>= p6 1)))
(assert (and (<= p7 9) (>= p7 1)))
(assert (and (<= p8 9) (>= p8 1)))
(assert (and (<= p9 9) (>= p9 1)))
(assert (and (<= p10 9) (>= p10 1)))
(assert (and (<= p11 9) (>= p11 1)))
(assert (and (<= p12 9) (>= p12 1)))
(assert (and (<= p13 9) (>= p13 1)))
(assert (and (<= p14 9) (>= p14 1)))
(assert (and (<= p15 9) (>= p15 1)))
(assert (and (<= p16 9) (>= p16 1)))
(assert (and (<= p17 9) (>= p17 1)))
(assert (and (<= p18 9) (>= p18 1)))
(assert (and (<= p19 9) (>= p19 1)))
(assert (and (<= p20 9) (>= p20 1)))
(assert (and (<= p21 9) (>= p21 1)))
(assert (and (<= p22 9) (>= p22 1)))
(assert (and (<= p23 9) (>= p23 1)))
(assert (and (<= p24 9) (>= p24 1)))
(assert (and (<= p25 9) (>= p25 1)))
(assert (and (<= p26 9) (>= p26 1)))
(assert (and (<= p27 9) (>= p27 1)))
(assert (and (<= p28 9) (>= p28 1)))
(assert (and (<= p29 9) (>= p29 1)))
(assert (and (<= p30 9) (>= p30 1)))
(assert (and (<= p31 9) (>= p31 1)))
(assert (and (<= p32 9) (>= p32 1)))
(assert (and (<= p33 9) (>= p33 1)))
(assert (and (<= p34 9) (>= p34 1)))
(assert (and (<= p35 9) (>= p35 1)))
(assert (and (<= p36 9) (>= p36 1)))
(assert (and (<= p37 9) (>= p37 1)))
(assert (and (<= p38 9) (>= p38 1)))
(assert (and (<= p39 9) (>= p39 1)))
(assert (and (<= p40 9) (>= p40 1)))
(assert (and (<= p41 9) (>= p41 1)))
(assert (and (<= p42 9) (>= p42 1)))
(assert (and (<= p43 9) (>= p43 1)))
(assert (and (<= p44 9) (>= p44 1)))
(assert (and (<= p45 9) (>= p45 1)))
(assert (and (<= p46 9) (>= p46 1)))
(assert (and (<= p47 9) (>= p47 1)))
(assert (and (<= p48 9) (>= p48 1)))
(assert (and (<= p49 9) (>= p49 1)))
(assert (and (<= p50 9) (>= p50 1)))
(assert (and (<= p51 9) (>= p51 1)))
(assert (and (<= p52 9) (>= p52 1)))
(assert (and (<= p53 9) (>= p53 1)))
(assert (and (<= p54 9) (>= p54 1)))
(assert (and (<= p55 9) (>= p55 1)))
(assert (and (<= p56 9) (>= p56 1)))
(assert (and (<= p57 9) (>= p57 1)))
(assert (and (<= p58 9) (>= p58 1)))
(assert (and (<= p59 9) (>= p59 1)))
(assert (and (<= p60 9) (>= p60 1)))
(assert (and (<= p61 9) (>= p61 1)))
(assert (and (<= p62 9) (>= p62 1)))
(assert (and (<= p63 9) (>= p63 1)))
(assert (and (<= p64 9) (>= p64 1)))
(assert (and (<= p65 9) (>= p65 1)))
(assert (and (<= p66 9) (>= p66 1)))
(assert (and (<= p67 9) (>= p67 1)))
(assert (and (<= p68 9) (>= p68 1)))
(assert (and (<= p69 9) (>= p69 1)))
(assert (and (<= p70 9) (>= p70 1)))
(assert (and (<= p71 9) (>= p71 1)))
(assert (and (<= p72 9) (>= p72 1)))
(assert (and (<= p73 9) (>= p73 1)))
(assert (and (<= p74 9) (>= p74 1)))
(assert (and (<= p75 9) (>= p75 1)))
(assert (and (<= p76 9) (>= p76 1)))
(assert (and (<= p77 9) (>= p77 1)))
(assert (and (<= p78 9) (>= p78 1)))
(assert (and (<= p79 9) (>= p79 1)))
(assert (and (<= p80 9) (>= p80 1)))

;specific to my puzzle
(assert (= p0 1))
(assert (= p10 2))
(assert (= p20 3))
(assert (= p30 5))
(assert (= p40 4))
(assert (= p50 6))
(assert (= p60 7))
(assert (= p70 8))
(assert (= p80 9))


(check-sat)
(get-value (p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17 p18 p19 p20 p21 p22 p23 p24 p25 p26 p27 p28 p29 p30 p31 p32 p33 p34 p35 p36 p37 p38 p39 p40 p41 p42 p43 p44 p45 p46 p47 p48 p49 p50 p51 p52 p53 p54 p55 p56 p57 p58 p59 p60 p61 p62 p63 p64 p65 p66 p67 p68 p69 p70 p71 p72 p73 p74 p75 p76 p77 p78 p79 p80))

